func merge(_ nums1: inout [Int], _ m: Int, _ nums2: [Int], _ n: Int) {
    var num1Pointer = m-1
    var num2Pointer = n-1
    var index = nums1.count-1
    
    while num1Pointer >= 0 && num2Pointer >= 0 {
        if nums1[num1Pointer] >= nums2[num2Pointer] {
            nums1[index] = nums1[num1Pointer]
            num1Pointer -= 1;
            index -= 1;
        } else {
            nums1[index] = nums2[num2Pointer]
            num2Pointer -= 1;
            index -= 1;
        }
    }
    
    while num1Pointer >= 0 {
        nums1[index] = nums1[num1Pointer]
        num1Pointer -= 1;
        index -= 1;
    }
    
    while num1Pointer >= 0 {
        nums1[index] = nums2[num2Pointer]
        num2Pointer -= 1;
        index -= 1;
    }
}

var nums1 = [1,2,3,0,0,0]
var m = 3
var nums2 = [2,5,6]
var n = 3

merge(&nums1, m, nums2, n)
